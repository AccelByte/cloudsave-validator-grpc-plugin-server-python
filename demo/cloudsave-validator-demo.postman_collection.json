{
	"info": {
		"_postman_id": "a60ab5da-23ce-414f-83b6-4b3eeddf9d85",
		"name": "Cloudsave Validator Demo",
		"description": "This `collection` requires an `environment` with the following variables.\n\n- `AB_BASE_URL`\n- `AB_NAMESPACE`\n- `AB_CLIENT_ID`\n- `AB_CLIENT_SECRET`\n- `EXTEND_APP_NAME`\n    \n\nYou will need following permissions for the IAM Client.  \nFor AGS Private Cloud customers:\n\n- `ADMIN:NAMESPACE:{namespace}:CLOUDSAVE:PLUGINS [CREATE,READ,UPDATE,DELETE]`\n    \n- `ADMIN:NAMESPACE:{namespace}:USER:\\*:CLOUDSAVE:RECORD [CREATE,READ,UPDATE,DELETE]`\n    \n- `ADMIN:NAMESPACE:{namespace}:CLOUDSAVE:RECORD [CREATE,READ,UPDATE,DELETE]`\n    \n- `NAMESPACE:{namespace}:CLOUDSAVE:RECORD [CREATE,READ,UPDATE,DELETE]`\n    \n- `ADMIN:NAMESPACE:{namespace}:INFORMATION:USER:\\* [DELETE]`\n    \n\nFor AGS Shared Cloud customers:\n\n- Cloud Save -> Custom Configuration (Read, Create, Update, Delete)\n    \n- Cloud Save -> Game Records (Read, Create, Update, Delete)\n    \n- Cloud Save -> Player Records (Read, Create, Update, Delete)\n    \n- IAM -> Users (Delete)\n    \n\nMake sure you have deployed Extend Service Extension app. Get `EXTEND_APP_NAME` from extend app page in admin portal. For local deployment, use local url instead.\n\nPlease read [getting started with CloudSave validator customization](https://docs.accelbyte.io/gaming-services/services/extend/override/getting-started-with-cloudsave-validator-customization/) for more information.",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json",
		"_exporter_id": "17100405"
	},
	"item": [
		{
			"name": "10-client-login",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Store client access token in collection variable\", function () {\r",
							"    var responseJson = pm.response.json();\r",
							"    \r",
							"    if (responseJson.access_token !== undefined) {\r",
							"        pm.collectionVariables.set('CLIENT_ACCESS_TOKEN', responseJson.access_token)\r",
							"    }\r",
							"});\r",
							""
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"auth": {
					"type": "basic",
					"basic": [
						{
							"key": "password",
							"value": "{{AB_CLIENT_SECRET}}",
							"type": "string"
						},
						{
							"key": "username",
							"value": "{{AB_CLIENT_ID}}",
							"type": "string"
						}
					]
				},
				"method": "POST",
				"header": [],
				"body": {
					"mode": "urlencoded",
					"urlencoded": [
						{
							"key": "grant_type",
							"value": "client_credentials",
							"type": "text"
						}
					]
				},
				"url": {
					"raw": "{{AB_BASE_URL}}/iam/v3/oauth/token",
					"host": [
						"{{AB_BASE_URL}}"
					],
					"path": [
						"iam",
						"v3",
						"oauth",
						"token"
					]
				}
			},
			"response": []
		},
		{
			"name": "20-client-create-test-user",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Store test user id, email, and password in collection variable\", function () {",
							"    var responseJson = pm.response.json();",
							"    ",
							"    if (responseJson.data[0].userId !== undefined) {",
							"        pm.collectionVariables.set('TEST_USER_ID', responseJson.data[0].userId)",
							"    }",
							"    if (responseJson.data[0].emailAddress !== undefined) {",
							"        pm.collectionVariables.set('TEST_USER_EMAIL', responseJson.data[0].emailAddress)",
							"    }",
							"    if (responseJson.data[0].password !== undefined) {",
							"        pm.collectionVariables.set('TEST_USER_PASSWORD', responseJson.data[0].password)",
							"    }",
							"});"
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"auth": {
					"type": "bearer",
					"bearer": [
						{
							"key": "token",
							"value": "{{CLIENT_ACCESS_TOKEN}}",
							"type": "string"
						}
					]
				},
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\n  \"count\": 1,\n  \"userInfo\": {\n    \"country\": \"US\"\n  }\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{AB_BASE_URL}}/iam/v4/admin/namespaces/{{AB_NAMESPACE}}/test_users",
					"host": [
						"{{AB_BASE_URL}}"
					],
					"path": [
						"iam",
						"v4",
						"admin",
						"namespaces",
						"{{AB_NAMESPACE}}",
						"test_users"
					]
				}
			},
			"response": []
		},
		{
			"name": "30-unregister-cloudsave-validator",
			"request": {
				"auth": {
					"type": "bearer",
					"bearer": [
						{
							"key": "token",
							"value": "{{CLIENT_ACCESS_TOKEN}}",
							"type": "string"
						}
					]
				},
				"method": "DELETE",
				"header": [],
				"url": {
					"raw": "{{AB_BASE_URL}}/cloudsave/v1/admin/namespaces/{{AB_NAMESPACE}}/plugins",
					"host": [
						"{{AB_BASE_URL}}"
					],
					"path": [
						"cloudsave",
						"v1",
						"admin",
						"namespaces",
						"{{AB_NAMESPACE}}",
						"plugins"
					]
				}
			},
			"response": []
		},
		{
			"name": "31-register-cloudsave-validator",
			"event": [
				{
					"listen": "prerequest",
					"script": {
						"exec": [
							"let requestBody = {",
							"    customFunction: {",
							"        afterReadGameRecord: true,",
							"        beforeWritePlayerRecord: true",
							"    }",
							"};",
							"",
							"let extendAppName = pm.collectionVariables.get(\"EXTEND_APP_NAME\");",
							"let grpcServerUrl = pm.collectionVariables.get(\"GRPC_SERVER_URL\");",
							"",
							"if (!extendAppName) {",
							"    extendAppName = pm.globals.get(\"EXTEND_APP_NAME\");",
							"}",
							"",
							"if (!extendAppName) {",
							"    extendAppName = pm.environment.get(\"EXTEND_APP_NAME\");",
							"}",
							"",
							"if (!grpcServerUrl) {",
							"    grpcServerUrl = pm.globals.get(\"GRPC_SERVER_URL\");",
							"}",
							"",
							"if (!grpcServerUrl) {",
							"    grpcServerUrl = pm.environment.get(\"GRPC_SERVER_URL\");",
							"}",
							"",
							"if (extendAppName) {",
							"    requestBody.extendType = \"APP\";",
							"    requestBody.appConfig = {",
							"        appName: extendAppName",
							"    };",
							"} else if (grpcServerUrl) {",
							"    requestBody.extendType = \"CUSTOM\";",
							"    requestBody.customConfig = {",
							"        GRPCAddress: grpcServerUrl",
							"    };",
							"} else {",
							"    pm.test(\"'EXTEND_APP_NAME' or 'GRPC_SERVER_URL' was set\", function () {",
							"        pm.expect(requestBody.extendType).to.be.a(\"string\").and.to.have.length.above(0);",
							"    });",
							"    pm.execution.skipRequest();",
							"}",
							"",
							"pm.variables.set(\"requestBody\", JSON.stringify(requestBody));"
						],
						"type": "text/javascript",
						"packages": {}
					}
				},
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 201\", function () {",
							"    pm.response.to.have.status(201);",
							"});"
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"auth": {
					"type": "bearer",
					"bearer": [
						{
							"key": "token",
							"value": "{{CLIENT_ACCESS_TOKEN}}",
							"type": "string"
						}
					]
				},
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{{requestBody}}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{AB_BASE_URL}}/cloudsave/v1/admin/namespaces/{{AB_NAMESPACE}}/plugins",
					"host": [
						"{{AB_BASE_URL}}"
					],
					"path": [
						"cloudsave",
						"v1",
						"admin",
						"namespaces",
						"{{AB_NAMESPACE}}",
						"plugins"
					]
				}
			},
			"response": []
		},
		{
			"name": "40-test-valid-payload",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 200\", function () {",
							"    pm.response.to.have.status(200);",
							"});"
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"auth": {
					"type": "bearer",
					"bearer": [
						{
							"key": "token",
							"value": "{{CLIENT_ACCESS_TOKEN}}",
							"type": "string"
						}
					]
				},
				"method": "PUT",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\n    \"userId\": \"{{TEST_USER_ID}}\",\n    \"favouriteWeaponType\": \"SWORD\",\n    \"favouriteWeapon\": \"excalibur\"\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{AB_BASE_URL}}/cloudsave/v1/admin/namespaces/{{AB_NAMESPACE}}/users/{{TEST_USER_ID}}/records/{{TEST_PAYLOAD_KEY}}",
					"host": [
						"{{AB_BASE_URL}}"
					],
					"path": [
						"cloudsave",
						"v1",
						"admin",
						"namespaces",
						"{{AB_NAMESPACE}}",
						"users",
						"{{TEST_USER_ID}}",
						"records",
						"{{TEST_PAYLOAD_KEY}}"
					]
				}
			},
			"response": []
		},
		{
			"name": "41-test-invalid-payload",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 400\", function () {",
							"    pm.response.to.have.status(400);",
							"});"
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"auth": {
					"type": "bearer",
					"bearer": [
						{
							"key": "token",
							"value": "{{CLIENT_ACCESS_TOKEN}}",
							"type": "string"
						}
					]
				},
				"method": "PUT",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\n    \"foo\": \"bar\"\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{AB_BASE_URL}}/cloudsave/v1/admin/namespaces/{{AB_NAMESPACE}}/users/{{TEST_USER_ID}}/records/{{TEST_PAYLOAD_KEY}}",
					"host": [
						"{{AB_BASE_URL}}"
					],
					"path": [
						"cloudsave",
						"v1",
						"admin",
						"namespaces",
						"{{AB_NAMESPACE}}",
						"users",
						"{{TEST_USER_ID}}",
						"records",
						"{{TEST_PAYLOAD_KEY}}"
					]
				}
			},
			"response": []
		},
		{
			"name": "90-client-delete-test-user",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.collectionVariables.set('TEST_USER_ID', \"\");",
							"pm.collectionVariables.set('TEST_USER_EMAIL', \"\");",
							"pm.collectionVariables.set('TEST_USER_PASSWORD', \"\");"
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"auth": {
					"type": "bearer",
					"bearer": [
						{
							"key": "token",
							"value": "{{CLIENT_ACCESS_TOKEN}}",
							"type": "string"
						}
					]
				},
				"method": "DELETE",
				"header": [],
				"url": {
					"raw": "{{AB_BASE_URL}}/iam/v3/admin/namespaces/{{AB_NAMESPACE}}/users/{{TEST_USER_ID}}/information",
					"host": [
						"{{AB_BASE_URL}}"
					],
					"path": [
						"iam",
						"v3",
						"admin",
						"namespaces",
						"{{AB_NAMESPACE}}",
						"users",
						"{{TEST_USER_ID}}",
						"information"
					]
				}
			},
			"response": []
		}
	],
	"event": [
		{
			"listen": "prerequest",
			"script": {
				"type": "text/javascript",
				"packages": {},
				"exec": [
					""
				]
			}
		},
		{
			"listen": "test",
			"script": {
				"type": "text/javascript",
				"packages": {},
				"exec": [
					""
				]
			}
		}
	],
	"variable": [
		{
			"key": "CLIENT_ACCESS_TOKEN",
			"value": ""
		},
		{
			"key": "GRPC_SERVER_URL",
			"value": "",
			"type": "string"
		},
		{
			"key": "EXTEND_APP_NAME",
			"value": "",
			"type": "string"
		},
		{
			"key": "TEST_PAYLOAD_KEY",
			"value": "favourite_weapon",
			"type": "string"
		},
		{
			"key": "TEST_USER_ID",
			"value": "",
			"type": "string"
		},
		{
			"key": "TEST_USER_EMAIL",
			"value": "",
			"type": "string"
		},
		{
			"key": "TEST_USER_PASSWORD",
			"value": "",
			"type": "string"
		}
	]
}